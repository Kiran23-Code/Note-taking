{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kiran Prince\\\\Desktop\\\\MernStack\\\\note-taking-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [noteContent, setNoteContent] = useState('');\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  const fetchNotes = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/notes');\n      const result = await response.json();\n      setNotes(result);\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  };\n  const handleSaveNote = async () => {\n    if (!noteContent) return alert('Note cannot be empty');\n    try {\n      const response = await fetch('http://localhost:3001/api/notes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: noteContent\n        })\n      });\n      const result = await response.json();\n      alert(result.message);\n      setNoteContent('');\n      fetchNotes(); // Refresh notes list\n    } catch (error) {\n      console.error('Error saving note:', error);\n    }\n  };\n  const handleDeleteNote = async id => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/notes/${id}`, {\n        method: 'DELETE'\n      });\n      const result = await response.json();\n      alert(result.message);\n      fetchNotes(); // Refresh notes list\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Note \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: noteContent,\n      onChange: e => setNoteContent(e.target.value),\n      placeholder: \"Enter your note...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveNote,\n      children: \"Save Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchNotes,\n      children: \"List Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"notes-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: note.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => handleDeleteNote(note.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, note.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ajrWleDEmMhLVgb8RGeAKSgH5aM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","noteContent","setNoteContent","notes","setNotes","fetchNotes","response","fetch","result","json","error","console","handleSaveNote","alert","method","headers","body","JSON","stringify","content","message","handleDeleteNote","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","map","note","_c","$RefreshReg$"],"sources":["C:/Users/Kiran Prince/Desktop/MernStack/note-taking-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [noteContent, setNoteContent] = useState('');\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  const fetchNotes = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/notes');\n      const result = await response.json();\n      setNotes(result);\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  };\n\n  const handleSaveNote = async () => {\n    if (!noteContent) return alert('Note cannot be empty');\n\n    try {\n      const response = await fetch('http://localhost:3001/api/notes', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ content: noteContent }),\n      });\n      const result = await response.json();\n      alert(result.message);\n      setNoteContent('');\n      fetchNotes(); // Refresh notes list\n    } catch (error) {\n      console.error('Error saving note:', error);\n    }\n  };\n\n  const handleDeleteNote = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/notes/${id}`, {\n        method: 'DELETE',\n      });\n      const result = await response.json();\n      alert(result.message);\n      fetchNotes(); // Refresh notes list\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Note </h1>\n      <textarea\n        value={noteContent}\n        onChange={(e) => setNoteContent(e.target.value)}\n        placeholder=\"Enter your note...\"\n      />\n      <button onClick={handleSaveNote}>Save Note</button>\n      <button onClick={fetchNotes}>List Notes</button>\n\n      <table className=\"notes-table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Content</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {notes.map((note) => (\n            <tr key={note.id}>\n              <td>{note.id}</td>\n              <td>{note.content}</td>\n              <td>\n                <button className=\"delete-btn\" onClick={() => handleDeleteNote(note.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}